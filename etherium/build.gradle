buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven {
            name "Sponge"
            url "https://repo.spongepowered.org/repository/maven-public/"
        }
        maven {
			name "Gradle Plugin Portal"
			url 'https://plugins.gradle.org/m2/'
			content { includeGroup "gradle.plugin.com.matthewprenger" }
		}
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath 'gradle.plugin.com.matthewprenger:CurseGradle:1.4.0'
    }
}

println("Applying plugins...")

apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'com.matthewprenger.cursegradle'
apply from: '../common.gradle'

dependencies {
	implementation(rootProject)
}

jar {
	includeEmptyDirs = false
	
	from (rootProject.sourceSets.main.output) {
		include 'com/integral/etherium/**'
		include '**/ItemBase.class'
		include '**/Vector3.class'
		include '**/Perhaps.class'
		include '**/ItemNBTHelper.class'
		include '**/ItemLoreHelper.class'
		include '**/AOEMiningHelper.class'
		include '**/CooldownMap.class'
		include '**/PacketPlayerMotion.class'
		include '**/EnigmaticMaterials.class'
		include '**/EnigmaticArmorMaterials.class'
	}
	
	from ("${rootProject.projectDir}/src/main/resources/assets/enigmaticlegacy") {
		include 'lang/**'
		include 'sounds/misc/hhon.ogg'
		include 'sounds/misc/hhoff.ogg'
		include 'sounds/misc/shield_trigger.ogg'
		include 'sounds/misc/shield_hit_?.ogg'
		include 'textures/items/*etherium*.png*'
		include 'textures/items/*ender_rod*.png*'
		into 'assets/etherium'
	}
	
	from ("${rootProject.projectDir}/src/main/resources/assets/enigmaticlegacy") {
		include 'textures/models/armor/etherium_layer_?.png'
		include 'textures/models/armor/unseen_armor.png'
		include 'textures/models/misc/ultimate_wither_armor.png'
		into 'assets/enigmaticlegacy'
	}
}

processResources {
	doFirst {
		println("Processing resources...")
	}
	
	exclude 'META-INF/mods.toml'

    from("${project.projectDir}/docs/META-INF") {
		println("Inflating mods.toml...")	
	
		// Replace properties in mods.toml with ones derived from settings.gradle
        include 'mods.toml'
        expand 'mod_license': mod_license, 
		'mod_version': project.version, 
		'mod_id' : mod_id, 
		'mod_name': mod_name, 
		'mod_url': mod_url, 
		'mod_author': mod_author, 
		'mod_description': mod_description, 
		'mod_icon': mod_icon, 
		'issue_tracker_url': issue_tracker_url, 
		'mod_credits': mod_credits, 
		'dep_forge': dep_forge, 
		'dep_minecraft': dep_minecraft
		rename 'mods.toml', "META-INF/mods.toml"
    }

    from("${project.projectDir}/docs") {
		println("Including documentation...")	
		// Include a license and changelog into build .jar
        include 'changelog.html'
    }
	
	from("${rootProject.projectDir}/docs") {
        include 'LICENSE'
	}
}