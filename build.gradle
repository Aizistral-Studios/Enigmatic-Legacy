buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        maven { url = 'https://dist.creeper.host/Sponge/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

mixin {
    add sourceSets.main, "enigmaticlegacy.refmap.json"
}

version = '1.0'
group = 'com.integral.enigmaticlegacy'
archivesBaseName = 'EnigmaticLegacy-smv'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'snapshot', version: '20200514-1.16'
    
	accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
	runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                enigmaticlegacy {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                enigmaticlegacy {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'enigmaticlegacy', '--all', '--output', file('src/generated/resources/')

            mods {
                enigmaticlegacy {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
	maven {  url = "https://maven.theillusivec4.top/" } // curios
	maven {  url = "https://maven.blamejared.com/" } // patchouli
	maven {  url = "https://repo.spongepowered.org/maven" }
	jcenter()
    mavenCentral()
	flatDir {
        dirs 'deps'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.1-32.0.67'

	compile 'org.spongepowered:mixin:0.8.1-SNAPSHOT'
	
	annotationProcessor 'org.spongepowered:mixin:0.8'
    annotationProcessor 'com.google.code.gson:gson:2.8.0'
    annotationProcessor 'com.google.guava:guava:21.0'
    annotationProcessor 'org.ow2.asm:asm-tree:7.2'
    annotationProcessor 'org.ow2.asm:asm-commons:7.2'
    annotationProcessor 'org.ow2.asm:asm-util:7.2'
	
	//compileOnly files('ofstuff2.jar')

    compile fg.deobf('top.theillusivec4.curios:curios:FORGE-1.16.1-3.0-beta4')
	//compile files('C:/Stuff/curios-FORGE-1.14.4-1.0-deobf.jar')
	//compile files('C:/Stuff/curios-FORGE-1.16.1-3.0-beta4-deobf.jar')
	
	compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.16-39:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.16-39")

}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "enigmaticlegacy",
            "Specification-Vendor": "Integral",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Integral",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConnector": "com.integral.enigmaticlegacy.MixinConnector"
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}